// <auto-generated />
using System;
using GestionStock.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionStock.Data.Migrations
{
    [DbContext(typeof(StockDbContext))]
    [Migration("20250326210642_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("GestionStock.Data.Entities.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GestionStock.Data.Entities.MouvementStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateMouvement")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProduitId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeMouvement")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.ToTable("MouvementsStock");
                });

            modelBuilder.Entity("GestionStock.Data.Entities.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategorieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Prix")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantite")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("GestionStock.Data.Entities.MouvementStock", b =>
                {
                    b.HasOne("GestionStock.Data.Entities.Produit", "Produit")
                        .WithMany("MouvementsStock")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("GestionStock.Data.Entities.Produit", b =>
                {
                    b.HasOne("GestionStock.Data.Entities.Categories", "Categorie")
                        .WithMany("Produits")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("GestionStock.Data.Entities.Categories", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("GestionStock.Data.Entities.Produit", b =>
                {
                    b.Navigation("MouvementsStock");
                });
#pragma warning restore 612, 618
        }
    }
}
